{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_Process_Templates.tsx\";\nimport React, { useState } from \"react\";\nimport { get_process_templates, delete_process_template } from \"../backend/ts/database\";\nimport { Card, Grid, CardContent, Typography, createStyles, makeStyles, CardActions, IconButton, CardActionArea } from \"@material-ui/core/\";\nimport with_on_hover_shadow from \"../components/Shadow_On_Hover\";\nimport { Link } from \"react-router-dom\";\nimport GetNameModalButton from \"../components/Get_Name_Modal\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nconst Card_HoverShadow = with_on_hover_shadow(Card, {\n  init: 1,\n  hovered: 3\n});\nconst useStyles = makeStyles(theme => createStyles({\n  fab: {\n    margin: 0,\n    top: 'auto',\n    right: \"4em\",\n    bottom: \"4em\",\n    left: 'auto',\n    position: 'fixed'\n  },\n  card: {\n    height: \"100%\",\n    \"&:hover\": {\n      boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n    }\n  }\n}));\n\nfunction View_Process() {\n  const _useState = useState({\n    processes: new Array()\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  React.useEffect(() => {\n    get_process_templates().then(value => {\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n\n  const handleDelete = process => {\n    delete_process_template(process);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, state.processes && state.processes.length > 0 ? state.processes.map((process, index) => React.createElement(Grid, {\n    key: \"process.card.\".concat(index),\n    item: true,\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, process.title)), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"primary\",\n    onClick: () => {\n      handleDelete(process);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(GetNameModalButton, {\n    process_template: process,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })))))) : null, React.createElement(Grid, {\n    key: \"add_process\",\n    item: true,\n    xs: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    style: {\n      backgroundColor: \"#eeeeee\",\n      minHeight: \"9em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    style: {\n      height: \"100%\"\n    },\n    component: Link,\n    to: \"/Create_Process\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    alignItems: \"center\",\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      fontSize: \"6em\"\n    },\n    color: \"disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    size: \"large\",\n    className: classes.fab,\n    component: Link,\n    to: \"/Create_Process\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })))));\n}\n\nexport default View_Process;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_Process_Templates.tsx"],"names":["React","useState","get_process_templates","delete_process_template","Card","Grid","CardContent","Typography","createStyles","makeStyles","CardActions","IconButton","CardActionArea","with_on_hover_shadow","Link","GetNameModalButton","Fab","AddIcon","DeleteIcon","EditIcon","Card_HoverShadow","init","hovered","useStyles","theme","fab","margin","top","right","bottom","left","position","card","height","boxShadow","View_Process","processes","Array","state","setState","useEffect","then","value","classes","handleDelete","process","length","map","index","title","backgroundColor","minHeight","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Process } from \"../backend/ts/common_define\";\nimport { get_process_templates, delete_process_template } from \"../backend/ts/database\";\n\nimport {\n  Card,\n  Grid,\n  CardContent,\n  Typography,\n  createStyles,\n  makeStyles,\n  Theme,\n  ButtonBase,\n  CardActions,\n  Button,\n  ButtonGroup,\n  IconButton,\n  CardActionArea\n} from \"@material-ui/core/\";\nimport with_on_hover_shadow from \"../components/Shadow_On_Hover\";\nimport { Link } from \"react-router-dom\";\nimport GetNameModalButton from \"../components/Get_Name_Modal\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\ninterface View_Process_State {\n  processes: Array<Process>;\n}\n\nconst Card_HoverShadow = with_on_hover_shadow(Card, { init: 1, hovered: 3 });\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      margin: 0,\n      top: 'auto',\n      right: \"4em\",\n      bottom: \"4em\",\n      left: 'auto',\n      position: 'fixed',\n    },\n    card: {\n      \n      height: \"100%\",\n      \"&:hover\": {\n        boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n      }\n    },\n  })\n);\n\nfunction View_Process() {\n  const [state, setState] = useState({\n    processes: new Array<Process>()\n  });\n  React.useEffect(() => {\n    get_process_templates().then(value => {\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n\n  const handleDelete = (process: Process) => {\n    delete_process_template(process);\n  }\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        {state.processes && state.processes.length > 0\n          ? state.processes.map((process, index) => (\n            <Grid key={`process.card.${index}`} item xs={12} md={3}>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography variant=\"h5\">{process.title}</Typography>\n                </CardContent>\n                <CardActions>\n                  <Grid container justify=\"center\">\n\n                    <IconButton\n                      color=\"primary\"\n                      onClick={() => {handleDelete(process)}}\n                    ><EditIcon /></IconButton>\n                    <IconButton\n                      color=\"secondary\"\n                    ><DeleteIcon /></IconButton>\n                    <GetNameModalButton process_template={process} />\n\n                  </Grid>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))\n          : null}\n\n        <Grid key={`add_process`} item xs={12} md={3}>\n          <Card className={classes.card} style={{ backgroundColor: \"#eeeeee\", minHeight:\"9em\" }}>\n            <CardActionArea style={{ height: \"100%\" }} component={Link} to=\"/Create_Process\">\n              <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" style={{ height: \"100%\" }}>\n                {/* use color=\"disabled to get that grey color\" */}\n                <AddIcon style={{ fontSize: \"6em\" }} color=\"disabled\"></AddIcon>\n              </Grid>\n            </CardActionArea>\n          </Card>\n        </Grid>\n\n        <Grid container justify=\"flex-end\" style={{ height: \"100%\" }}>\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            size=\"large\"\n            className={classes.fab}\n            component={Link}\n            to=\"/Create_Process\"\n          >\n            <AddIcon />\n          </Fab>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default View_Process;\n"]},"metadata":{},"sourceType":"module"}