{"ast":null,"code":"var _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/components/Activity_Component.tsx\";\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { Activity } from \"../backend/ts/common_define\";\nimport { Chip, Tooltip, Zoom } from \"@material-ui/core\";\nimport GetJSONModal from \"./Get_JSON_Modal\";\n\nfunction Activity_Component({\n  prefix,\n  activity,\n  index,\n  classes,\n  arrayHelpers,\n  amountOfActivities,\n  formikProps,\n  onToggleDrawer\n}) {\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoComplete: \"off\",\n    name: \"\".concat(prefix, \"title\"),\n    className: classes.textField,\n    label: \"Activity Title\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    type: \"text\",\n    required: true,\n    onChange: formikProps.handleChange,\n    onBlur: formikProps.handleBlur,\n    value: activity.title.length === 1 ? activity.title.toUpperCase() : activity.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: \"\".concat(prefix, \"description\"),\n    id: \"outlined-basic\",\n    className: classes.textField,\n    label: \"Description\",\n    margin: \"normal\",\n    multiline: true,\n    rows: \"3\",\n    variant: \"outlined\",\n    type: \"text\",\n    onChange: formikProps.handleChange,\n    onBlur: formikProps.handleBlur,\n    value: activity.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Autocomplete, {\n    multiple: true,\n    freeSolo: true,\n    onChange: (_, val) => formikProps.setFieldValue(\"\".concat(prefix, \"possible_states\"), val),\n    defaultValue: activity.possible_states,\n    onBlur: formikProps.handleBlur,\n    className: classes.textField,\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      onKeyPress: e => {\n        //disable submit on enter as enter is used to create chips\n        if (e.key === \"Enter\") e.preventDefault();\n      },\n      fullWidth: true,\n      name: \"\".concat(prefix, \"possible_states\"),\n      label: \"Possible States\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    style: {\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(GetJSONModal, {\n    fieldName: \"\".concat(prefix, \"automationSettings\"),\n    setFunc: formikProps.setFieldValue,\n    btnClass: classes.button,\n    startText: Object.keys(activity.automationSettings).length === 0 && activity.automationSettings.constructor === Object ? \"\" : JSON.stringify(activity.automationSettings, undefined, 4),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), arrayHelpers !== undefined && amountOfActivities !== undefined && onToggleDrawer !== undefined && React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    TransitionProps: {\n      timeout: 300\n    },\n    title: \"Add activity from activity templates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.button,\n    \"aria-label\": \"add\",\n    color: \"default\",\n    onClick: onToggleDrawer(true, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(PostAddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })))), React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    TransitionProps: {\n      timeout: 300\n    },\n    title: \"Add new activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.button,\n    \"aria-label\": \"add\",\n    color: \"default\",\n    onClick: () => arrayHelpers.insert(index + 1, new Activity()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))), React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    TransitionProps: {\n      timeout: 300\n    },\n    title: \"Remove activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.button,\n    disabled: amountOfActivities < 2,\n    \"aria-label\": \"remove\",\n    color: \"default\",\n    onClick: () => arrayHelpers.remove(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(RemoveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, arrayHelpers !== undefined && amountOfActivities !== undefined ? React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    TransitionProps: {\n      timeout: 300\n    },\n    title: \"Move up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.button,\n    disabled: index === 0,\n    \"aria-label\": \"remove\",\n    color: \"default\",\n    onClick: () => arrayHelpers.move(index, index - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(ArrowUpwardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })))), React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    TransitionProps: {\n      timeout: 300\n    },\n    title: \"Move down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.button,\n    disabled: index === amountOfActivities - 1,\n    \"aria-label\": \"remove\",\n    color: \"default\",\n    onClick: () => arrayHelpers.move(index, index + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(ArrowDownwardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }))))) : null))));\n}\n\nexport default Activity_Component;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/components/Activity_Component.tsx"],"names":["React","TextField","Paper","Grid","IconButton","AddIcon","PostAddIcon","Autocomplete","RemoveIcon","ArrowUpwardIcon","ArrowDownwardIcon","Activity","Chip","Tooltip","Zoom","GetJSONModal","Activity_Component","prefix","activity","index","classes","arrayHelpers","amountOfActivities","formikProps","onToggleDrawer","paper","textField","handleChange","handleBlur","title","length","toUpperCase","description","_","val","setFieldValue","possible_states","value","getTagProps","map","option","params","e","key","preventDefault","flexGrow","button","Object","keys","automationSettings","constructor","JSON","stringify","undefined","timeout","insert","remove","move"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ArrayHelpers, FormikProps } from \"formik\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { Activity } from \"../backend/ts/common_define\";\nimport { Chip, Tooltip, Zoom } from \"@material-ui/core\";\nimport GetJSONModal from \"./Get_JSON_Modal\";\n\ninterface Activity_Component_Props {\n  prefix: string;\n  activity: Activity;\n  index: number;\n  classes: Record<any, string>;\n  arrayHelpers?: ArrayHelpers;\n  amountOfActivities?: number;\n  formikProps: FormikProps<any>;\n  onToggleDrawer?: Function;\n}\n\nfunction Activity_Component({\n  prefix,\n  activity,\n  index,\n  classes,\n  arrayHelpers,\n  amountOfActivities,\n  formikProps,\n  onToggleDrawer\n}: Activity_Component_Props) {\n  return (\n    <Paper className={classes.paper}>\n      <Grid container justify=\"center\">\n        <TextField\n          autoComplete=\"off\"\n          name={`${prefix}title`}\n          className={classes.textField}\n          label=\"Activity Title\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          type=\"text\"\n          required\n          onChange={formikProps.handleChange}\n          onBlur={formikProps.handleBlur}\n          value={\n            activity.title.length === 1\n              ? activity.title.toUpperCase()\n              : activity.title\n          }\n        />\n        <TextField\n          name={`${prefix}description`}\n          id=\"outlined-basic\"\n          className={classes.textField}\n          label=\"Description\"\n          margin=\"normal\"\n          multiline\n          rows=\"3\"\n          variant=\"outlined\"\n          type=\"text\"\n          onChange={formikProps.handleChange}\n          onBlur={formikProps.handleBlur}\n          value={activity.description}\n        />\n        <Autocomplete\n          multiple\n          freeSolo\n          onChange={(_, val) =>\n            formikProps.setFieldValue(`${prefix}possible_states`, val)\n          }\n          defaultValue={activity.possible_states}\n          onBlur={formikProps.handleBlur}\n          className={classes.textField}\n          renderTags={(value: string[], getTagProps) =>\n            value.map((option: string, index: number) => (\n              <Chip\n                variant=\"outlined\"\n                label={option}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={params => (\n            <TextField\n              {...params}\n              onKeyPress={e => {\n                //disable submit on enter as enter is used to create chips\n                if (e.key === \"Enter\") e.preventDefault();\n              }}\n              fullWidth\n              name={`${prefix}possible_states`}\n              label=\"Possible States\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              type=\"text\"\n            />\n          )}\n        />\n        <Grid container style={{ flexGrow: 1 }}>\n          <Grid item xs={4}>\n            <GetJSONModal\n              fieldName={`${prefix}automationSettings`}\n              setFunc={formikProps.setFieldValue}\n              btnClass={classes.button}\n              startText={\n                Object.keys(activity.automationSettings).length === 0 &&\n                activity.automationSettings.constructor === Object\n                  ? \"\"\n                  : JSON.stringify(activity.automationSettings, undefined, 4)\n              }\n            />\n          </Grid>\n          {arrayHelpers !== undefined &&\n            amountOfActivities !== undefined &&\n            onToggleDrawer !== undefined && (\n              <Grid item xs={4}>\n                <Grid container justify=\"center\">\n                  <Tooltip\n                    TransitionComponent={Zoom}\n                    TransitionProps={{ timeout: 300 }}\n                    title=\"Add activity from activity templates\"\n                  >\n                    <span>\n                      <IconButton\n                        className={classes.button}\n                        aria-label=\"add\"\n                        color=\"default\"\n                        onClick={onToggleDrawer(true, index)}\n                      >\n                        <PostAddIcon />\n                      </IconButton>\n                    </span>\n                  </Tooltip>\n\n                  <Tooltip\n                    TransitionComponent={Zoom}\n                    TransitionProps={{ timeout: 300 }}\n                    title=\"Add new activity\"\n                  >\n                    <IconButton\n                      className={classes.button}\n                      aria-label=\"add\"\n                      color=\"default\"\n                      onClick={() =>\n                        arrayHelpers.insert(index + 1, new Activity())\n                      }\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip\n                    TransitionComponent={Zoom}\n                    TransitionProps={{ timeout: 300 }}\n                    title=\"Remove activity\"\n                  >\n                    <span>\n                      <IconButton\n                        className={classes.button}\n                        disabled={amountOfActivities < 2}\n                        aria-label=\"remove\"\n                        color=\"default\"\n                        onClick={() => arrayHelpers.remove(index)}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </span>\n                  </Tooltip>\n                </Grid>\n              </Grid>\n            )}\n          <Grid item xs={4}>\n            {arrayHelpers !== undefined && amountOfActivities !== undefined ? (\n              <Grid container justify=\"flex-end\">\n                <Tooltip\n                  TransitionComponent={Zoom}\n                  TransitionProps={{ timeout: 300 }}\n                  title=\"Move up\"\n                >\n                  <span>\n                    <IconButton\n                      className={classes.button}\n                      disabled={index === 0}\n                      aria-label=\"remove\"\n                      color=\"default\"\n                      onClick={() => arrayHelpers.move(index, index - 1)}\n                    >\n                      <ArrowUpwardIcon />\n                    </IconButton>\n                  </span>\n                </Tooltip>\n                <Tooltip\n                  TransitionComponent={Zoom}\n                  TransitionProps={{ timeout: 300 }}\n                  title=\"Move down\"\n                >\n                  <span>\n                    <IconButton\n                      className={classes.button}\n                      disabled={index === amountOfActivities - 1}\n                      aria-label=\"remove\"\n                      color=\"default\"\n                      onClick={() => arrayHelpers.move(index, index + 1)}\n                    >\n                      <ArrowDownwardIcon />\n                    </IconButton>\n                  </span>\n                </Tooltip>\n              </Grid>\n            ) : null}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Activity_Component;\n"]},"metadata":{},"sourceType":"module"}