{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/components/Process_timeline.tsx\";\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { process_instance_update_step, process_instance_update_activity_state, process_instance_reset_date } from \"../backend/ts/database\";\nimport { StepButton, ButtonGroup, Divider } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: \"100%\",\n    padding: \"0px\",\n    margin: \"0px\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  },\n  completed: {\n    display: \"inline-block\"\n  }\n}));\n//TODO maybe just use higher component state for active step?\nexport default function VerticalLinearStepper(props) {\n  const classes = useStyles({}); //init active step to props.process.step\n\n  const _React$useState = React.useState(props.process.activeStep),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  const _React$useState3 = React.useState(props.process.activities.map(a => !!(a.state >= 0))),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        completed = _React$useState4[0],\n        setCompleted = _React$useState4[1];\n\n  const update_step_counter = current_step => {\n    process_instance_update_step(props.process, current_step);\n  };\n\n  const getStepContent = step => {\n    return props.process.activities[step].description;\n  };\n\n  const handleNext = () => {\n    update_step_counter(activeStep + 1);\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleReset = () => {\n    update_step_counter(0);\n    setActiveStep(0);\n    setCompleted({});\n\n    for (let A of props.process.activities) {\n      process_instance_update_activity_state(props.process, A, -1);\n    }\n\n    process_instance_reset_date(props.process);\n  };\n\n  const handleComplete = e => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext(); //indexOf would not work here as the comparison is case sensitive\n\n    let state_index = -1;\n\n    for (let index = 0; index < props.process.activities[activeStep].possible_states.length; index++) {\n      const element = props.process.activities[activeStep].possible_states[index];\n\n      if (element.toUpperCase() === e.currentTarget.innerText.toUpperCase()) {\n        state_index = index;\n      }\n    }\n\n    props.process.activities[activeStep].state = state_index;\n    props.process.activities[activeStep].end_date = new Date();\n    if (props.process.activities.filter(a => a.state < 0).length === 0) props.process.done_date = new Date();\n    props.process.activities[activeStep].possible_states.indexOf(e.currentTarget.innerText);\n    process_instance_update_activity_state(props.process, props.process.activities[activeStep], state_index);\n  };\n\n  const handleStep = step => () => {\n    update_step_counter(step);\n    setActiveStep(step);\n  };\n  /* const completedSteps = () => {\n    return Object.keys(completed).length;\n  }; */\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: {\n      padding: \"2em\",\n      marginBottom: \"1em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    style: {\n      marginBottom: \"0.3em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, props.process.title), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    style: {\n      marginBottom: \"0.3em\",\n      whiteSpace: \"pre-line\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Start Date: \".concat(props.process.start_date.toLocaleString()), props.process.done_date !== undefined && \" - End Date: \".concat(props.process.done_date.toLocaleString())), React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginLeft: \"1em\",\n      marginBottom: \"0.3em\",\n      whiteSpace: \"pre-line\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, props.process.description), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    nonLinear: true,\n    style: {\n      marginTop: \"1em\",\n      padding: \"0px\"\n    },\n    activeStep: activeStep,\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, props.process.activities.map((activity, index) => React.createElement(Step, {\n    key: activity.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(StepButton, {\n    onClick: handleStep(index),\n    completed: completed[index],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, activity.title, activity.state >= 0 && activity.end_date !== undefined ? \" - \".concat(activity.possible_states[activity.state], \" - \").concat(activity.end_date.toLocaleString()) : null), React.createElement(StepContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    style: {\n      whiteSpace: \"pre-line\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, getStepContent(index)), activeStep !== props.process.activities.length && (completed[activeStep] ? null : React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      marginTop: \"0.3em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, activity.possible_states.map((state, index) => React.createElement(Button, {\n    key: \"state_button_\".concat(index),\n    onClick: handleComplete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, state)))))))))), React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    variant: \"contained\",\n    style: {\n      backgroundColor: \"#33cc33\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Reset\"))));\n}","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/components/Process_timeline.tsx"],"names":["React","makeStyles","createStyles","Stepper","Step","StepContent","Button","Paper","Grid","Typography","process_instance_update_step","process_instance_update_activity_state","process_instance_reset_date","StepButton","ButtonGroup","Divider","useStyles","theme","root","width","padding","margin","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","completed","display","VerticalLinearStepper","props","classes","useState","process","activeStep","setActiveStep","activities","map","a","state","setCompleted","update_step_counter","current_step","getStepContent","step","description","handleNext","prevActiveStep","handleReset","A","handleComplete","e","newCompleted","state_index","index","possible_states","length","element","toUpperCase","currentTarget","innerText","end_date","Date","filter","done_date","indexOf","handleStep","title","whiteSpace","start_date","toLocaleString","undefined","marginLeft","activity","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ProcessInstance } from \"../backend/ts/common_define\";\nimport {\n  process_instance_update_step,\n  process_instance_update_activity_state,\n  process_instance_reset_date\n} from \"../backend/ts/database\";\nimport { StepButton, ButtonGroup, Divider } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      padding: \"0px\",\n      margin: \"0px\"\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2)\n    },\n    resetContainer: {\n      padding: theme.spacing(3)\n    },\n    completed: {\n      display: \"inline-block\"\n    }\n  })\n);\n\ninterface Line_Stepper_Props {\n  process: ProcessInstance;\n}\n//TODO maybe just use higher component state for active step?\nexport default function VerticalLinearStepper(props: Line_Stepper_Props) {\n  const classes = useStyles({});\n  //init active step to props.process.step\n  const [activeStep, setActiveStep] = React.useState(props.process.activeStep);\n  const [completed, setCompleted] = React.useState<{ [k: number]: boolean }>(\n    props.process.activities.map(a => !!(a.state >= 0))\n  );\n\n  const update_step_counter = (current_step: number) => {\n    process_instance_update_step(props.process, current_step);\n  };\n\n  const getStepContent = (step: number) => {\n    return props.process.activities[step].description;\n  };\n\n  const handleNext = () => {\n    update_step_counter(activeStep + 1);\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleReset = () => {\n    update_step_counter(0);\n    setActiveStep(0);\n    setCompleted({});\n    for (let A of props.process.activities) {\n      process_instance_update_activity_state(props.process, A, -1);\n    }\n    process_instance_reset_date(props.process);\n  };\n\n  const handleComplete = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n    //indexOf would not work here as the comparison is case sensitive\n    let state_index = -1;\n    for (\n      let index = 0;\n      index < props.process.activities[activeStep].possible_states.length;\n      index++\n    ) {\n      const element =\n        props.process.activities[activeStep].possible_states[index];\n      if (element.toUpperCase() === e.currentTarget.innerText.toUpperCase()) {\n        state_index = index;\n      }\n    }\n    props.process.activities[activeStep].state = state_index;\n    props.process.activities[activeStep].end_date = new Date();\n    if (props.process.activities.filter(a => a.state < 0).length === 0)\n      props.process.done_date = new Date();\n\n    props.process.activities[activeStep].possible_states.indexOf(\n      e.currentTarget.innerText\n    );\n    process_instance_update_activity_state(\n      props.process,\n      props.process.activities[activeStep],\n      state_index\n    );\n  };\n\n  const handleStep = (step: number) => () => {\n    update_step_counter(step);\n    setActiveStep(step);\n  };\n\n  /* const completedSteps = () => {\n    return Object.keys(completed).length;\n  }; */\n\n  return (\n    <div>\n      <Paper style={{ padding: \"2em\", marginBottom: \"1em\" }}>\n        <Typography variant=\"h3\" style={{ marginBottom: \"0.3em\" }}>\n          {props.process.title}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          style={{ marginBottom: \"0.3em\", whiteSpace: \"pre-line\" }}\n        >\n          {`Start Date: ${props.process.start_date.toLocaleString()}`}\n          {props.process.done_date !== undefined &&\n            ` - End Date: ${props.process.done_date.toLocaleString()}`}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          style={{\n            marginLeft: \"1em\",\n            marginBottom: \"0.3em\",\n            whiteSpace: \"pre-line\"\n          }}\n        >\n          {props.process.description}\n        </Typography>\n        <Divider />\n        <div className={classes.root}>\n          <Stepper nonLinear style={{marginTop: \"1em\", padding: \"0px\"}} activeStep={activeStep} orientation=\"vertical\">\n            {props.process.activities.map((activity, index) => (\n              <Step key={activity.title}>\n                <StepButton\n                  onClick={handleStep(index)}\n                  completed={completed[index]}\n                >\n                  {activity.title}\n                  {activity.state >= 0 && activity.end_date !== undefined\n                    ? ` - ${\n                        activity.possible_states[activity.state]\n                      } - ${activity.end_date.toLocaleString()}`\n                    : null}\n                </StepButton>\n\n                <StepContent>\n                  <Typography\n                    variant=\"body1\"\n                    style={{ whiteSpace: \"pre-line\" }}\n                  >\n                    {getStepContent(index)}\n                  </Typography>\n                  {activeStep !== props.process.activities.length &&\n                    (completed[activeStep] ? null : (\n                      <Grid\n                        container\n                        spacing={2}\n                        style={{ marginTop: \"0.3em\" }}\n                      >\n                        <Grid item>\n                          <ButtonGroup color=\"primary\">\n                            {activity.possible_states.map((state, index) => (\n                              <Button\n                                key={`state_button_${index}`}\n                                onClick={handleComplete}\n                              >\n                                {state}\n                              </Button>\n                            ))}\n                          </ButtonGroup>\n                        </Grid>\n                      </Grid>\n                    ))}\n                </StepContent>\n              </Step>\n            ))}\n          </Stepper>\n\n          <Button\n            onClick={handleReset}\n            className={classes.button}\n            variant=\"contained\"\n            style={{ backgroundColor: \"#33cc33\" }}\n          >\n            Reset\n          </Button>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}