{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/Create_Activity.tsx\";\nimport * as React from \"react\";\nimport { Form, FieldArray, Formik } from \"formik\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { Status } from \"../backend/ts/common_define\";\nimport { save_activity_template, does_activity_exist } from \"../backend/ts/database\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  },\n  root: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction InnerForm() {\n  const history = useHistory();\n  const classes = useStyles({});\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        submitDialogOpen = _useState2[0],\n        setSubmitDialogOpen = _useState2[1];\n\n  const handleClose = (answer, values) => {\n    setSubmitDialogOpen(false);\n\n    if (answer === true) {\n      submitActivity(values);\n    }\n  };\n\n  const submitActivity = values => {\n    save_activity_template(values);\n    history.push(\"/View_Activities\");\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      statuses: [new Status()],\n      possible_states: [\"\", \"\"],\n      automationSettings: \"\"\n    },\n    onSubmit: (values, actions) => {\n      does_activity_exist(values.title).then(does_exist => {\n        if (does_exist) setSubmitDialogOpen(true);else submitActivity(values);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"title\",\n    className: classes.textField,\n    label: \"Activity Title\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    autoComplete: \"off\",\n    type: \"text\",\n    required: true,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.title.length === 1 ? values.title.toUpperCase() : values.title,\n    inputProps: {\n      style: {\n        fontSize: 30\n      }\n    },\n    InputLabelProps: {\n      style: {\n        fontSize: 30\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: \"description\",\n    id: \"outlined-basic\",\n    className: classes.textField,\n    label: \"Description\",\n    margin: \"normal\",\n    multiline: true,\n    rows: \"3\",\n    variant: \"outlined\",\n    type: \"text\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(FieldArray, {\n    name: \"statuses\",\n    render: helpers => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, values.statuses && values.statuses.length > 0 && values.statuses.map((status, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoComplete: \"off\",\n      name: \"statuses.\".concat(index, \".title\"),\n      label: \"Status\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: status.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      \"aria-label\": \"add\",\n      color: \"default\",\n      disabled: values.statuses.length < 2,\n      onClick: () => helpers.remove(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(RemoveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), values.statuses.length - 1 === index && React.createElement(IconButton, {\n      \"aria-label\": \"add\",\n      color: \"default\",\n      disabled: values.statuses.length > 4,\n      onClick: () => helpers.push({\n        title: \"\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    justify: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: submitDialogOpen,\n    onClose: () => {\n      handleClose(false, values);\n    },\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"An activity with this name already exists, do you want to overwrite it?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      handleClose(false, values);\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"No\"), React.createElement(Button, {\n    onClick: () => {\n      handleClose(true, values);\n    },\n    color: \"primary\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Yes\"))), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    type: \"submit\",\n    color: \"primary\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default InnerForm;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/Create_Activity.tsx"],"names":["React","Form","FieldArray","Formik","createStyles","makeStyles","TextField","Button","Paper","Grid","Dialog","DialogActions","DialogTitle","IconButton","AddIcon","RemoveIcon","Status","save_activity_template","does_activity_exist","useHistory","useState","useStyles","theme","container","display","flexWrap","button","margin","spacing","textField","width","root","padding","InnerForm","history","classes","submitDialogOpen","setSubmitDialogOpen","handleClose","answer","values","submitActivity","push","title","description","statuses","possible_states","automationSettings","actions","then","does_exist","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","length","toUpperCase","style","fontSize","helpers","map","status","index","remove"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Form, FieldArray, Formik } from \"formik\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { Activity, Status } from \"../backend/ts/common_define\";\nimport {\n  save_activity_template,\n  does_activity_exist\n} from \"../backend/ts/database\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\n\ninterface OtherProps {\n  title?: string;\n}\n\ninterface CreateActivityProps {\n  title?: string;\n  description?: string;\n  status?: Array<Activity>;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      margin: theme.spacing(1),\n      width: \"100%\"\n    },\n    root: {\n      padding: theme.spacing(2),\n      margin: theme.spacing(1)\n    }\n  })\n);\n\nfunction InnerForm() {\n  const history = useHistory();\n  const classes = useStyles({});\n  const [submitDialogOpen, setSubmitDialogOpen] = useState(false);\n\n  const handleClose = (answer: Boolean, values: Activity) => {\n    setSubmitDialogOpen(false);\n    if (answer === true) {\n      submitActivity(values);\n    }\n  };\n\n  const submitActivity = (values: Activity) => {\n    save_activity_template(values);\n    history.push(\"/View_Activities\");\n  };\n  return (\n    <Formik\n      initialValues={{\n        title: \"\",\n        description: \"\",\n        statuses: [new Status()],\n        possible_states: [\"\", \"\"],\n        automationSettings: \"\"\n      }}\n      onSubmit={(values, actions) => {\n        does_activity_exist(values.title).then(does_exist => {\n          if (does_exist) setSubmitDialogOpen(true);\n          else submitActivity(values);\n        });\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <Form>\n          <Paper className={classes.root}>\n            <Grid container justify=\"center\">\n              <TextField\n                name=\"title\"\n                className={classes.textField}\n                label=\"Activity Title\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                type=\"text\"\n                required\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={\n                  values.title.length === 1\n                    ? values.title.toUpperCase()\n                    : values.title\n                }\n                inputProps={{\n                  style: { fontSize: 30 }\n                }}\n                InputLabelProps={{\n                  style: { fontSize: 30 }\n                }}\n              />\n              <TextField\n                name=\"description\"\n                id=\"outlined-basic\"\n                className={classes.textField}\n                label=\"Description\"\n                margin=\"normal\"\n                multiline\n                rows=\"3\"\n                variant=\"outlined\"\n                type=\"text\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.description}\n              />\n              <Grid container justify=\"flex-start\">\n                <FieldArray\n                  name=\"statuses\"\n                  render={helpers => (\n                    <div>\n                      {values.statuses &&\n                        values.statuses.length > 0 &&\n                        values.statuses.map((status, index) => (\n                          <div key={index}>\n                            <TextField\n                              autoComplete=\"off\"\n                              name={`statuses.${index}.title`}\n                              label=\"Status\"\n                              margin=\"normal\"\n                              variant=\"outlined\"\n                              type=\"text\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={status.title}\n                            />\n                            <IconButton\n                              aria-label=\"add\"\n                              color=\"default\"\n                              disabled={values.statuses.length < 2}\n                              onClick={() => helpers.remove(index)}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                            {values.statuses.length - 1 === index && (\n                              <IconButton\n                                aria-label=\"add\"\n                                color=\"default\"\n                                disabled={values.statuses.length > 4}\n                                onClick={() => helpers.push({ title: \"\" })}\n                              >\n                                <AddIcon />\n                              </IconButton>\n                            )}\n                          </div>\n                        ))}\n                    </div>\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Grid justify=\"center\" container>\n            <Dialog\n              open={submitDialogOpen}\n              onClose={() => {\n                handleClose(false, values);\n              }}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\n                  \"An activity with this name already exists, do you want to overwrite it?\"\n                }\n              </DialogTitle>\n              <DialogActions>\n                <Button\n                  onClick={() => {\n                    handleClose(false, values);\n                  }}\n                  color=\"primary\"\n                >\n                  No\n                </Button>\n                <Button\n                  onClick={() => {\n                    handleClose(true, values);\n                  }}\n                  color=\"primary\"\n                  autoFocus\n                >\n                  Yes\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <Button\n              variant=\"contained\"\n              className={classes.button}\n              type=\"submit\"\n              color=\"primary\"\n              disabled={isSubmitting}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default InnerForm;\n"]},"metadata":{},"sourceType":"module"}