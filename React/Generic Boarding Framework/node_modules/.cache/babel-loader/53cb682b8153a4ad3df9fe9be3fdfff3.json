{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Jobb/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Jobb/Netgain/netgain-1/src/components/Drawer_Component.tsx\";\nimport * as React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { get_activity_templates } from \"../backend/ts/database\";\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Tooltip, Zoom, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForward\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: \"flex\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: 240\n  },\n  toolbar: theme.mixins.toolbar\n}));\n\nfunction Drawer_Component(props) {\n  const classes = useStyles({});\n\n  const _useState = useState({\n    open: false,\n    activities: new Array()\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  React.useEffect(() => {\n    get_activity_templates().then(value => {\n      console.log(value);\n      setState({\n        activities: value,\n        open: false\n      });\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    open: props.open,\n    onClose: props.onToggleDrawer(false),\n    className: classes.drawer,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, state.activities.length === 0 ? React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    style: {\n      marginTop: \"10em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"There are no templates\")) : React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, state.activities && state.activities.length > 0 && state.activities.map((activity, index) => React.createElement(Grid, {\n    key: \"activity.\".concat(index),\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    key: index,\n    onClick: () => props.handleClick(activity),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, activity.title), activity.description), React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    TransitionProps: {\n      timeout: 300\n    },\n    title: \"Add to process\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ArrowForwardIosIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))))));\n}\n\nexport default Drawer_Component;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Jobb/Netgain/netgain-1/src/components/Drawer_Component.tsx"],"names":["React","createStyles","makeStyles","Grid","get_activity_templates","Drawer","List","ListItem","ListItemIcon","ListItemText","Divider","Tooltip","Zoom","Typography","useState","ArrowForwardIosIcon","useStyles","theme","root","display","container","flexWrap","button","margin","spacing","drawer","width","flexShrink","drawerPaper","toolbar","mixins","Drawer_Component","props","classes","open","activities","Array","state","setState","useEffect","then","value","console","log","onToggleDrawer","paper","length","marginTop","map","activity","index","handleClick","title","description","timeout"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Activity } from \"../backend/ts/common_define\";\nimport { get_activity_templates } from \"../backend/ts/database\";\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Tooltip,\n  Zoom,\n  Typography\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForward\";\n\ninterface Drawer_Component_Props {\n  open: boolean;\n  handleClick: Function;\n  onToggleDrawer: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\"\n    },\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    drawer: {\n      width: 240,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: 240\n    },\n    toolbar: theme.mixins.toolbar\n  })\n);\n\nfunction Drawer_Component(props: Drawer_Component_Props) {\n  const classes = useStyles({});\n  const [state, setState] = useState({\n    open: false,\n    activities: new Array<Activity>()\n  });\n\n  React.useEffect(() => {\n    get_activity_templates().then(value => {\n      console.log(value);\n      setState({\n        activities: value,\n        open: false\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <Drawer\n        open={props.open}\n        onClose={props.onToggleDrawer(false)}\n        className={classes.drawer}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        {state.activities.length === 0 ? (\n          <Grid container justify=\"center\">\n              <Typography style={{marginTop: \"10em\"}}>There are no templates</Typography>\n           \n          </Grid>\n        ) : (\n          <List>\n            {state.activities &&\n              state.activities.length > 0 &&\n              state.activities.map((activity, index) => (\n                <Grid key={`activity.${index}`} item>\n                  <ListItem\n                    button\n                    key={index}\n                    onClick={() => props.handleClick(activity)}\n                  >\n                    <ListItemText>\n                      <h3>{activity.title}</h3>\n                      {activity.description}\n                    </ListItemText>\n                    <ListItemIcon>\n                      <Tooltip\n                        TransitionComponent={Zoom}\n                        TransitionProps={{ timeout: 300 }}\n                        title=\"Add to process\"\n                      >\n                        <ArrowForwardIosIcon />\n                      </Tooltip>\n                    </ListItemIcon>\n                  </ListItem>\n                  <Divider />\n                </Grid>\n              ))}\n          </List>\n        )}\n      </Drawer>\n    </div>\n  );\n}\n\nexport default Drawer_Component;\n"]},"metadata":{},"sourceType":"module"}