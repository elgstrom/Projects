{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_All_Process_Instances.tsx\";\nimport React, { useState } from \"react\";\nimport { get_process_instances, delete_process_instance } from \"../backend/ts/database\";\nimport { Card, Grid, CardContent, Typography, createStyles, makeStyles, CardActions, IconButton } from '@material-ui/core/';\nimport with_on_hover_shadow from '../components/Shadow_On_Hover';\nimport { useHistory } from \"react-router-dom\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nconst Card_HoverShadow = with_on_hover_shadow(Card, {\n  init: 1,\n  hovered: 3\n});\nconst useStyles = makeStyles(theme => createStyles({\n  fab: {\n    margin: theme.spacing(1)\n  },\n  card: {\n    \"&:hover\": {\n      boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n    }\n  }\n}));\n\nfunction View_Process() {\n  const _useState = useState({\n    processes: new Array()\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const history = useHistory();\n\n  const handleOpenClick = process => {\n    history.push(\"/View_Process_Instance/\".concat(process.user_name, \"/\").concat(process.title));\n  };\n\n  const handleDelete = process => {\n    console.log(process);\n    setState({\n      processes: state.processes.filter(p => p !== process)\n    });\n    delete_process_instance(process);\n  };\n\n  React.useEffect(() => {\n    get_process_instances().then(value => {\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, state.processes && state.processes.length > 0 ? state.processes.map((process, index) => React.createElement(Grid, {\n    key: \"process.card.\".concat(index),\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, process.title), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, process.user_name), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, process.step, \"/\", process.activities.length, \" avklarade\")), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"secondary\",\n    onClick: () => {\n      handleDelete(process);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: () => {\n      handleOpenClick(process);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(ArrowForwardIosIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))))))) : null));\n}\n\nexport default View_Process;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_All_Process_Instances.tsx"],"names":["React","useState","get_process_instances","delete_process_instance","Card","Grid","CardContent","Typography","createStyles","makeStyles","CardActions","IconButton","with_on_hover_shadow","useHistory","DeleteIcon","ArrowForwardIosIcon","Card_HoverShadow","init","hovered","useStyles","theme","fab","margin","spacing","card","boxShadow","View_Process","processes","Array","state","setState","history","handleOpenClick","process","push","user_name","title","handleDelete","console","log","filter","p","useEffect","then","value","classes","length","map","index","step","activities"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Process, ProcessInstance } from \"../backend/ts/common_define\";\nimport { get_process_instances, delete_process_instance } from \"../backend/ts/database\";\nimport { Card, Grid, CardContent, Typography, createStyles, makeStyles, Theme, CardActions, IconButton } from '@material-ui/core/';\nimport with_on_hover_shadow from '../components/Shadow_On_Hover';\nimport {\n    useHistory\n} from \"react-router-dom\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n\ninterface View_Process_State {\n    processes: Array<Process>;\n}\nconst Card_HoverShadow = with_on_hover_shadow(Card, { init: 1, hovered: 3 });\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        fab: {\n            margin: theme.spacing(1)\n        },\n        card: {\n            \"&:hover\": {\n                boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n            }\n        }\n    })\n);\n\nfunction View_Process() {\n    const [state, setState] = useState({\n        processes: new Array<ProcessInstance>(),\n    });\n\n    const history = useHistory();\n\n    const handleOpenClick = (process: ProcessInstance) => {\n        history.push(`/View_Process_Instance/${process.user_name}/${process.title}`);\n    };\n\n    const handleDelete = (process: ProcessInstance) => {\n        console.log(process);\n        setState(\n            { processes: state.processes.filter(p => p !== process) }\n        )\n        delete_process_instance(process);\n    }\n\n    React.useEffect(() => {\n        get_process_instances().then((value) => {\n            setState({\n                processes: value,\n            });\n        });\n\n    }, []);\n    const classes = useStyles({});\n\n    return (\n        <div>\n            <Grid\n                container\n                spacing={3}\n            >\n                {state.processes && state.processes.length > 0 ? (\n                    state.processes.map((process, index) => (\n                        <Grid key={`process.card.${index}`} item xs={12} sm={6} md={4} lg={3}>\n                            <Card\n                                className={classes.card}\n                            >\n                                <CardContent>\n                                    <Typography variant=\"h5\">\n                                        {process.title}\n                                    </Typography>\n                                    <Typography >\n                                        {process.user_name}\n                                    </Typography>\n                                    <Typography>{process.step}/{process.activities.length} avklarade</Typography>\n                                </CardContent>\n                                <CardActions>\n\n                                    <Grid\n                                        container\n                                        justify=\"center\"\n                                    >\n                                        <IconButton color=\"secondary\" onClick={() => { handleDelete(process) }}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                        <IconButton onClick={() => { handleOpenClick(process) }}>\n                                            <ArrowForwardIosIcon />\n                                        </IconButton >\n                                    </Grid>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    )))\n                    : null}\n            </Grid>\n        </div>\n    );\n}\n\nexport default View_Process;\n"]},"metadata":{},"sourceType":"module"}