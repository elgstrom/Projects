{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_All_Process_Instances.tsx\";\nimport React, { useState } from \"react\";\nimport { get_process_instances, delete_process_instance } from \"../backend/ts/database\";\nimport { Card, Grid, CardContent, Typography, createStyles, makeStyles, CardActions, IconButton, CardHeader, Icon, Tooltip, Zoom } from \"@material-ui/core/\";\nimport with_on_hover_shadow from \"../components/Shadow_On_Hover\";\nimport { useHistory } from \"react-router-dom\"; //import DeleteButton from \"../components/Delete_Process_Template_Modal\";\n\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForward\";\nimport DeleteButton from \"../components/Delete_Item_Modal\"; //import ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { green, yellow, red } from '@material-ui/core/colors';\nconst Card_HoverShadow = with_on_hover_shadow(Card, {\n  init: 1,\n  hovered: 3\n});\nconst useStyles = makeStyles(theme => createStyles({\n  fab: {\n    margin: theme.spacing(1)\n  },\n  card: {\n    \"&:hover\": {\n      boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n    }\n  },\n  header: {\n    paddingBottom: \"0 \",\n    paddingTop: \"10\"\n  }\n}));\n\nfunction View_Process() {\n  const _useState = useState({\n    processes: new Array()\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const history = useHistory();\n\n  const handleOpenClick = process => {\n    history.push(\"/View_Process_Instance/\".concat(process.user_name, \"/\").concat(process.title));\n  };\n\n  const handleDelete = process => {\n    setState({\n      processes: state.processes.filter(p => p !== process)\n    });\n    delete_process_instance(process);\n  };\n\n  React.useEffect(() => {\n    get_process_instances().then(value => {\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, state.processes && state.processes.length > 0 ? state.processes.map((process, index) => React.createElement(Grid, {\n    key: \"process.card.\".concat(index),\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: classes.header,\n    title: process.title,\n    action: process.activities.length == process.activities.filter(p => p.state >= 0).length ? React.createElement(Tooltip, {\n      TransitionComponent: Zoom,\n      TransitionProps: {\n        timeout: 300\n      },\n      title: \"Done\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(CheckCircleIcon, {\n      style: {\n        color: green[700]\n      },\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))) : process.activities.filter(p => p.state >= 0).length == 0 ? React.createElement(Tooltip, {\n      TransitionComponent: Zoom,\n      TransitionProps: {\n        timeout: 300\n      },\n      title: \"Not started\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(CheckCircleOutlineIcon, {\n      style: {\n        color: red[700]\n      },\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))) : React.createElement(Tooltip, {\n      TransitionComponent: Zoom,\n      TransitionProps: {\n        timeout: 300\n      },\n      title: \"In progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(CheckCircleOutlineIcon, {\n      style: {\n        color: yellow[700]\n      },\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, process.user_name), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"\".concat(process.activities.filter(p => p.state >= 0).length, \" / \").concat(process.activities.length, \" completed\"))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(DeleteButton, {\n    item: process,\n    onDelete: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    TransitionProps: {\n      timeout: 300\n    },\n    title: \"Start/Continue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => {\n      handleOpenClick(process);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(ArrowForwardIosIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })))))))) : null));\n}\n\nexport default View_Process;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_All_Process_Instances.tsx"],"names":["React","useState","get_process_instances","delete_process_instance","Card","Grid","CardContent","Typography","createStyles","makeStyles","CardActions","IconButton","CardHeader","Icon","Tooltip","Zoom","with_on_hover_shadow","useHistory","ArrowForwardIosIcon","DeleteButton","CheckCircleIcon","CheckCircleOutlineIcon","green","yellow","red","Card_HoverShadow","init","hovered","useStyles","theme","fab","margin","spacing","card","boxShadow","header","paddingBottom","paddingTop","View_Process","processes","Array","state","setState","history","handleOpenClick","process","push","user_name","title","handleDelete","filter","p","useEffect","then","value","classes","length","map","index","activities","timeout","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Process, ProcessInstance } from \"../backend/ts/common_define\";\nimport {\n  get_process_instances,\n  delete_process_instance\n} from \"../backend/ts/database\";\nimport {\n  Card,\n  Grid,\n  CardContent,\n  Typography,\n  createStyles,\n  makeStyles,\n  Theme,\n  CardActions,\n  IconButton,\n  CardHeader,\n  Icon,\n  Tooltip,\n  Zoom\n} from \"@material-ui/core/\";\nimport with_on_hover_shadow from \"../components/Shadow_On_Hover\";\nimport { useHistory } from \"react-router-dom\";\n//import DeleteButton from \"../components/Delete_Process_Template_Modal\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForward\";\nimport DeleteButton from \"../components/Delete_Item_Modal\";\n//import ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { green, yellow, red } from '@material-ui/core/colors';\n\ninterface View_Process_State {\n  processes: Array<Process>;\n}\nconst Card_HoverShadow = with_on_hover_shadow(Card, { init: 1, hovered: 3 });\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      margin: theme.spacing(1)\n    },\n    card: {\n      \"&:hover\": {\n        boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n      }\n    },\n    header: {\n      paddingBottom: \"0 \",\n      paddingTop: \"10\"\n    },\n  })\n);\n\nfunction View_Process() {\n  const [state, setState] = useState({\n    processes: new Array<ProcessInstance>()\n  });\n\n  const history = useHistory();\n\n  const handleOpenClick = (process: ProcessInstance) => {\n    history.push(\n      `/View_Process_Instance/${process.user_name}/${process.title}`\n    );\n  };\n\n  const handleDelete = (process: ProcessInstance) => {\n    setState({\n      processes: state.processes.filter(p => p !== process)\n    });\n    delete_process_instance(process);\n  };\n\n  React.useEffect(() => {\n    get_process_instances().then(value => {\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        {state.processes && state.processes.length > 0\n          ? state.processes.map((process, index) => (\n              <Grid\n                key={`process.card.${index}`}\n                item\n                xs={12}\n                sm={6}\n                md={4}\n                lg={3}\n              >\n                <Card className={classes.card}>\n                  <Grid >\n                  <CardHeader\n                    className={classes.header}\n                    title={process.title}\n                    action={\n                      (process.activities.length == process.activities.filter(p=> p.state >= 0).length)?\n                       (\n                      <Tooltip TransitionComponent={Zoom} TransitionProps={{timeout: 300}} title=\"Done\" >\n                       <Icon>\n                        <CheckCircleIcon style={{ color: green[700]}} fontSize='large'/>\n                      </Icon>\n                      </Tooltip>)\n                      : (process.activities.filter(p=> p.state >= 0).length == 0) ?\n                      (\n                      <Tooltip TransitionComponent={Zoom} TransitionProps={{timeout: 300}} title=\"Not started\" >\n                      <Icon>\n                        <CheckCircleOutlineIcon style={{ color: red[700]}} fontSize='large'/>\n                      </Icon>\n                      </Tooltip>\n                      ):\n                      (\n                      <Tooltip TransitionComponent={Zoom} TransitionProps={{timeout: 300}} title=\"In progress\" >  \n                        <Icon>\n                        <CheckCircleOutlineIcon style={{ color: yellow[700]}} fontSize='large'/>\n                      </Icon>\n                      </Tooltip>\n                      )\n                    }\n                  />\n                  </Grid>\n                  <CardContent>\n                    <Typography>{process.user_name}</Typography>\n                    <Typography>\n                      {`${process.activities.filter(p=> p.state >= 0).length} / ${process.activities.length} completed`}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Grid container justify=\"center\">\n                      <DeleteButton item={process} onDelete={handleDelete} />\n                      <Tooltip TransitionComponent={Zoom} TransitionProps={{ timeout: 300 }} title=\"Start/Continue\">\n                      <IconButton\n                        onClick={() => {\n                          handleOpenClick(process);\n                        }}\n                      >\n                        <ArrowForwardIosIcon />\n                      </IconButton>\n                      </Tooltip>\n                    </Grid>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))\n          : null}\n      </Grid>\n    </div>\n  );\n}\n\nexport default View_Process;\n"]},"metadata":{},"sourceType":"module"}