{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/components/Process_timeline.tsx\";\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { process_instance_update_step } from '../backend/ts/database';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '30%'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\n//TODO maybe just use higher component state for active step?\nexport default function VerticalLinearStepper(props) {\n  const classes = useStyles({}); //init active step to props.process.step\n\n  const _React$useState = React.useState(props.process.step),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  const amountOfSteps = props.process.activities.length;\n\n  const update_step_counter = current_step => {\n    process_instance_update_step(props.process, current_step);\n  };\n\n  const getStepContent = step => {\n    return props.process.activities[step].description;\n  };\n\n  const handleNext = () => {\n    update_step_counter(activeStep + 1);\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    update_step_counter(activeStep - 1);\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    update_step_counter(0);\n    setActiveStep(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    activeStep: activeStep,\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.process.activities.map((activity, index) => React.createElement(Step, {\n    key: activity.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(StepLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, activity.title), React.createElement(StepContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, getStepContent(index)), React.createElement(\"div\", {\n    className: classes.actionsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleBack,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Tillbaka\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, activeStep === amountOfSteps - 1 || amountOfSteps === 1 ? 'Klar' : 'NÃ¤sta'))))))), activeStep === amountOfSteps && React.createElement(Paper, {\n    square: true,\n    elevation: 0,\n    className: classes.resetContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Alla steg \\xE4r avklarade, bra jobbat\"), React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    variant: \"contained\",\n    style: {\n      backgroundColor: '#33cc33'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"\\xC5terst\\xE4ll\")));\n}","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/components/Process_timeline.tsx"],"names":["React","makeStyles","createStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","process_instance_update_step","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","VerticalLinearStepper","props","classes","useState","process","step","activeStep","setActiveStep","amountOfSteps","activities","length","update_step_counter","current_step","getStepContent","description","handleNext","prevActiveStep","handleBack","handleReset","map","activity","index","title","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { ProcessInstance } from '../backend/ts/common_define'\nimport { process_instance_update_step } from '../backend/ts/database'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '30%',\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\ninterface Line_Stepper_Props {\n  process: ProcessInstance;\n}\n//TODO maybe just use higher component state for active step?\nexport default function VerticalLinearStepper(props: Line_Stepper_Props) {\n  const classes = useStyles({});\n  //init active step to props.process.step\n  const [activeStep, setActiveStep] = React.useState(props.process.step);\n  const amountOfSteps = props.process.activities.length;\n\n  const update_step_counter = (current_step: number) => {\n    process_instance_update_step(props.process, current_step);\n  }\n\n  const getStepContent = (step: number) => {\n    return props.process.activities[step].description;\n  }\n\n  const handleNext = () => {\n    update_step_counter(activeStep + 1)\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    update_step_counter(activeStep - 1)\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    update_step_counter(0)\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {props.process.activities.map((activity, index) => (\n          <Step key={activity.title}>\n            <StepLabel>{activity.title}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Tillbaka\n                    </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === amountOfSteps - 1|| amountOfSteps === 1 ? 'Klar' : 'NÃ¤sta'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === amountOfSteps && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>Alla steg Ã¤r avklarade, bra jobbat</Typography>\n          <Button\n            onClick={handleReset}\n            className={classes.button}\n            variant=\"contained\"\n            style={{ backgroundColor: '#33cc33' }}\n          >\n            ÃterstÃ¤ll\n            </Button>\n        </Paper>\n      )}\n    </div>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}