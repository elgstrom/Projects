{"ast":null,"code":"var _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_Process_Instance.tsx\";\nimport * as React from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport { get_process_instance } from \"../backend/ts/database\";\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport Timeline from '../components/Process_timeline';\nimport { Link } from \"react-router-dom\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\n//TODO: Change to functional component\nclass View_Process extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = void 0;\n    this.state = void 0;\n    this.props = props;\n    this.state = {};\n  }\n\n  componentDidMount() {\n    get_process_instance(this.props.match.params.process_instance_name, this.props.match.params.user_name).then(value => {\n      this.setState({\n        process: value\n      });\n    });\n  }\n\n  render() {\n    if (this.state.process !== undefined) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        component: Link,\n        to: \"/View_All_Process_Instances\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(ArrowBackIosIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \" Go back\"), React.createElement(Typography, {\n        variant: \"h2\",\n        style: {\n          marginBottom: '0.3em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.process.title), React.createElement(Typography, {\n        variant: \"body1\",\n        style: {\n          marginBottom: '0.3em',\n          whiteSpace: \"pre-line\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.process.description), React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Timeline, {\n        process: this.state.process,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    } else return React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\n;\nexport default View_Process;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_Process_Instance.tsx"],"names":["React","Paper","get_process_instance","Typography","IconButton","Timeline","Link","ArrowBackIosIcon","View_Process","Component","constructor","props","state","componentDidMount","match","params","process_instance_name","user_name","then","value","setState","process","render","undefined","marginBottom","title","whiteSpace","description"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;AASA;AACA,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AAKvCC,EAAAA,WAAW,CAACC,KAAD,EAAkD;AACzD,UAAMA,KAAN;AADyD,SAH7DA,KAG6D;AAAA,SAF7DC,KAE6D;AAGzD,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AAEH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,oBAAoB,CAAC,KAAKS,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,qBAAzB,EAAgD,KAAKL,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBE,SAAxE,CAApB,CAAuGC,IAAvG,CAA6GC,KAAD,IAAW;AACnH,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAd;AACH,KAFD;AAIH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKV,KAAL,CAAWS,OAAX,KAAuBE,SAA3B,EAAsC;AAClC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEjB,IAAvB;AAA6B,QAAA,EAAE,EAAC,6BAAhC;AAA8D,QAAA,KAAK,EAAC,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,aADJ,EAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAE;AAAEkB,UAAAA,YAAY,EAAE;AAAhB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKZ,KAAL,CAAWS,OAAX,CAAmBI,KADxB,CAJJ,EAOI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAE;AAAED,UAAAA,YAAY,EAAE,OAAhB;AAAyBE,UAAAA,UAAU,EAAE;AAArC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKd,KAAL,CAAWS,OAAX,CAAmBM,WADxB,CAPJ,EAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKf,KAAL,CAAWS,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAVJ,CADJ;AAiBH,KAlBD,MAmBI,OAAQ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;AACP;;AAxCsC;;AAyC1C;AAED,eAAeb,YAAf","sourcesContent":["import * as React from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport { ProcessInstance } from \"../backend/ts/common_define\";\nimport { get_process_instance } from \"../backend/ts/database\";\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport Timeline from '../components/Process_timeline';\nimport { RouteComponentProps } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\ninterface View_Process_State {\n    process?: ProcessInstance;\n}\ninterface View_Process_Params {\n    process_instance_name: string,\n    user_name: string,\n}\n//TODO: Change to functional component\nclass View_Process extends React.Component {\n\n    props: RouteComponentProps<View_Process_Params>;\n    state: View_Process_State;\n    \n    constructor(props: RouteComponentProps<View_Process_Params>) {\n        super(props);\n\n        this.props = props;\n        this.state = {};\n\n    }\n    componentDidMount() {\n        get_process_instance(this.props.match.params.process_instance_name, this.props.match.params.user_name).then((value) => {\n            this.setState({ process: value });\n        });\n\n    }\n\n    render() {\n        if (this.state.process !== undefined) {\n            return (\n                <div>\n                    <IconButton component={Link} to=\"/View_All_Process_Instances\" color=\"inherit\">\n                        <ArrowBackIosIcon /> Go back\n                    </IconButton >\n                    <Typography variant=\"h2\" style={{ marginBottom: '0.3em' }}>\n                        {this.state.process.title}\n                    </Typography>\n                    <Typography variant=\"body1\" style={{ marginBottom: '0.3em', whiteSpace: \"pre-line\" }}>\n                        {this.state.process.description}\n                    </Typography>\n                    <Paper>\n                        <Timeline process={this.state.process} />\n                    </Paper>\n                </div>\n            );\n\n        } else\n            return (<Typography>Loading...</Typography>)\n    }\n};\n\nexport default View_Process;\n\n"]},"metadata":{},"sourceType":"module"}