{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/git/Projects/React/Generic Boarding Framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/git/Projects/React/Generic Boarding Framework/src/views/Create_Activity.tsx\";\nimport * as React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Activity } from \"../backend/ts/common_define\";\nimport { save_activity_template, does_activity_exist } from \"../backend/ts/database\";\nimport ActivityComponent from \"../components/Activity_Component\";\n/* interface OtherProps {\n  title?: string;\n}\n\ninterface CreateActivityProps {\n  title?: string;\n  description?: string;\n} */\n\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  },\n  root: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction InnerForm() {\n  const history = useHistory();\n  const classes = useStyles({});\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        submitDialogOpen = _useState2[0],\n        setSubmitDialogOpen = _useState2[1];\n\n  const handleClose = (answer, values) => {\n    setSubmitDialogOpen(false);\n\n    if (answer === true) {\n      submitActivity(values);\n    }\n  };\n\n  const submitActivity = values => {\n    console.log(values);\n    save_activity_template(values);\n    history.push(\"/View_Activities\");\n  };\n\n  return React.createElement(Formik, {\n    initialValues: new Activity(),\n    onSubmit: (values, actions) => {\n      does_activity_exist(values.title).then(does_exist => {\n        if (does_exist) setSubmitDialogOpen(true);else submitActivity(values);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, formikProps => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(ActivityComponent, {\n    prefix: \"\",\n    activity: formikProps.values,\n    index: 1,\n    classes: classes,\n    formikProps: formikProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    justify: \"center\",\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: submitDialogOpen,\n    onClose: () => {\n      handleClose(false, formikProps.values);\n    },\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"An activity with this name already exists, do you want to overwrite it?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      handleClose(false, formikProps.values);\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"No\"), React.createElement(Button, {\n    onClick: () => {\n      handleClose(true, formikProps.values);\n    },\n    color: \"primary\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Yes\"))), React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.button,\n    type: \"submit\",\n    color: \"primary\",\n    disabled: formikProps.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default InnerForm;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/git/Projects/React/Generic Boarding Framework/src/views/Create_Activity.tsx"],"names":["React","useHistory","useState","Form","Formik","createStyles","makeStyles","Button","Grid","Dialog","DialogActions","DialogTitle","Activity","save_activity_template","does_activity_exist","ActivityComponent","useStyles","theme","container","display","flexWrap","button","margin","spacing","textField","width","root","padding","paper","InnerForm","history","classes","submitDialogOpen","setSubmitDialogOpen","handleClose","answer","values","submitActivity","console","log","push","actions","title","then","does_exist","formikProps","isSubmitting"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\nimport { Form, Formik, FormikProps } from \"formik\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Activity } from \"../backend/ts/common_define\";\nimport {\n  save_activity_template,\n  does_activity_exist\n} from \"../backend/ts/database\";\nimport ActivityComponent from \"../components/Activity_Component\";\n\n/* interface OtherProps {\n  title?: string;\n}\n\ninterface CreateActivityProps {\n  title?: string;\n  description?: string;\n} */\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      margin: theme.spacing(1),\n      width: \"100%\"\n    },\n    root: {\n      padding: theme.spacing(2),\n      margin: theme.spacing(1)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      margin: theme.spacing(1)\n    }\n  })\n);\n\nfunction InnerForm() {\n  const history = useHistory();\n  const classes = useStyles({});\n  const [submitDialogOpen, setSubmitDialogOpen] = useState(false);\n\n  const handleClose = (answer: Boolean, values: Activity) => {\n    setSubmitDialogOpen(false);\n    if (answer === true) {\n      submitActivity(values);\n    }\n  };\n\n  const submitActivity = (values: Activity) => {\n    console.log(values);\n    save_activity_template(values);\n    history.push(\"/View_Activities\");\n  };\n  return (\n    <Formik\n      initialValues={new Activity()}\n      onSubmit={(values, actions) => {\n        does_activity_exist(values.title).then(does_exist => {\n          if (does_exist) setSubmitDialogOpen(true);\n          else submitActivity(values);\n        });\n      }}\n    >\n      {(formikProps: FormikProps<any>) => (\n        <Form>\n          <ActivityComponent\n            prefix=\"\"\n            activity={formikProps.values}\n            index={1}\n            classes={classes}\n            formikProps={formikProps}\n          />\n          <Grid justify=\"center\" container>\n            <Dialog\n              open={submitDialogOpen}\n              onClose={() => {\n                handleClose(false, formikProps.values);\n              }}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {\n                  \"An activity with this name already exists, do you want to overwrite it?\"\n                }\n              </DialogTitle>\n              <DialogActions>\n                <Button\n                  onClick={() => {\n                    handleClose(false, formikProps.values);\n                  }}\n                  color=\"primary\"\n                >\n                  No\n                </Button>\n                <Button\n                  onClick={() => {\n                    handleClose(true, formikProps.values);\n                  }}\n                  color=\"primary\"\n                  autoFocus\n                >\n                  Yes\n                </Button>\n              </DialogActions>\n            </Dialog>\n            <Button\n              variant=\"contained\"\n              className={classes.button}\n              type=\"submit\"\n              color=\"primary\"\n              disabled={formikProps.isSubmitting}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default InnerForm;\n"]},"metadata":{},"sourceType":"module"}