{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Jobb/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Jobb/Netgain/netgain-1/src/views/View_Process_Templates.tsx\";\nimport React, { useState } from \"react\";\nimport { get_process_templates, delete_process_template } from \"../backend/ts/database\";\nimport { Card, Grid, CardContent, Typography, createStyles, makeStyles, CardActions, CardActionArea, Hidden, Tooltip, Zoom } from \"@material-ui/core/\";\nimport { Link } from \"react-router-dom\";\nimport GetNameModalButton from \"../components/Get_Name_Modal\";\nimport DeleteButton from \"../components/Delete_Item_Modal\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport GetProcessInfo from \"../components/Get_Process_Info_Modal\";\n/* interface View_Process_State {\n  processes: Array<Process>;\n} */\n\nconst useStyles = makeStyles(theme => createStyles({\n  fab: {\n    margin: 0,\n    top: \"auto\",\n    right: \"4em\",\n    bottom: \"4em\",\n    left: \"auto\",\n    position: \"fixed\"\n  },\n  card: {\n    \"&:hover\": {\n      boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n    }\n  }\n}));\n\nfunction View_Process() {\n  const _useState = useState({\n    processes: new Array()\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  React.useEffect(() => {\n    get_process_templates().then(value => {\n      console.log(value);\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n\n  const handleDelete = process => {\n    delete_process_template(process);\n    setState({\n      processes: state.processes.filter(p => p !== process)\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, state.processes && state.processes.length > 0 ? state.processes.map((process, index) => React.createElement(Grid, {\n    key: \"process.card.\".concat(index),\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, process.title), process.activities.length > 1 && React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, process.activities.length, \" activities\"), process.activities.length === 1 && React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"1 activity\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Author: \", process.author)), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(GetProcessInfo, {\n    process: process,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(DeleteButton, {\n    item: process,\n    onDelete: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(GetNameModalButton, {\n    process_template: process,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })))))) : null, React.createElement(Hidden, {\n    only: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    key: \"add_process\",\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    TransitionComponent: Zoom,\n    TransitionProps: {\n      timeout: 300\n    },\n    title: \"Create new process template\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    style: {\n      height: \"12.5em\",\n      backgroundColor: \"#eeeeee\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    style: {\n      height: \"100%\"\n    },\n    component: Link,\n    to: \"/Create_Process\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    alignItems: \"center\",\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      fontSize: \"6em\"\n    },\n    color: \"disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))))))), React.createElement(Hidden, {\n    smUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    size: \"large\",\n    className: classes.fab,\n    component: Link,\n    to: \"/Create_Process\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))))));\n}\n\nexport default View_Process;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Jobb/Netgain/netgain-1/src/views/View_Process_Templates.tsx"],"names":["React","useState","get_process_templates","delete_process_template","Card","Grid","CardContent","Typography","createStyles","makeStyles","CardActions","CardActionArea","Hidden","Tooltip","Zoom","Link","GetNameModalButton","DeleteButton","Fab","AddIcon","GetProcessInfo","useStyles","theme","fab","margin","top","right","bottom","left","position","card","boxShadow","View_Process","processes","Array","state","setState","useEffect","then","value","console","log","classes","handleDelete","process","filter","p","length","map","index","title","activities","author","timeout","height","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Process } from \"../backend/ts/common_define\";\nimport {\n  get_process_templates,\n  delete_process_template\n} from \"../backend/ts/database\";\n\nimport {\n  Card,\n  Grid,\n  CardContent,\n  Typography,\n  createStyles,\n  makeStyles,\n  Theme,\n  CardActions,\n  CardActionArea,\n  Hidden,\n  Tooltip,\n  Zoom\n} from \"@material-ui/core/\";\nimport { Link } from \"react-router-dom\";\nimport GetNameModalButton from \"../components/Get_Name_Modal\";\nimport DeleteButton from \"../components/Delete_Item_Modal\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport GetProcessInfo from \"../components/Get_Process_Info_Modal\";\n\n/* interface View_Process_State {\n  processes: Array<Process>;\n} */\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      margin: 0,\n      top: \"auto\",\n      right: \"4em\",\n      bottom: \"4em\",\n      left: \"auto\",\n      position: \"fixed\"\n    },\n    card: {\n      \"&:hover\": {\n        boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n      }\n    }\n  })\n);\n\nfunction View_Process() {\n  const [state, setState] = useState({\n    processes: new Array<Process>()\n  });\n\n  React.useEffect(() => {\n    get_process_templates().then(value => {\n      console.log(value);\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n\n  const handleDelete = (process: Process) => {\n    delete_process_template(process);\n    setState({\n      processes: state.processes.filter(p => p !== process)\n    });\n  };\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        {state.processes && state.processes.length > 0\n          ? state.processes.map((process, index) => (\n              <Grid\n                key={`process.card.${index}`}\n                item\n                xs={12}\n                sm={6}\n                md={4}\n                lg={3}\n              >\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant=\"h5\">{process.title}</Typography>\n                    {process.activities.length > 1 && (\n                      <Typography>\n                        {process.activities.length} activities\n                      </Typography>\n                    )}\n                    {process.activities.length === 1 && (\n                      <Typography>1 activity</Typography>\n                    )}\n                    <Typography>Author: {process.author}</Typography>\n                  </CardContent>\n                  <Grid container justify=\"center\">\n                    <CardActions>\n\n                    <GetProcessInfo\n                      process={process}\n                    />\n\n                      <DeleteButton item={process} onDelete={handleDelete} />\n                      <GetNameModalButton process_template={process} />\n                    </CardActions>\n                  </Grid>\n                </Card>\n              </Grid>\n            ))\n          : null}\n        <Hidden only=\"xs\">\n          <Grid key={`add_process`} item xs={12} sm={6} md={4} lg={3}>\n            <Tooltip\n              TransitionComponent={Zoom}\n              TransitionProps={{ timeout: 300 }}\n              title=\"Create new process template\"\n            >\n              <Card\n                className={classes.card}\n                style={{ height: \"12.5em\", backgroundColor: \"#eeeeee\" }}\n              >\n                <CardActionArea\n                  style={{ height: \"100%\" }}\n                  component={Link}\n                  to=\"/Create_Process\"\n                >\n                  <Grid\n                    container\n                    justify=\"center\"\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    style={{ height: \"100%\" }}\n                  >\n                    {/* use color=\"disabled to get that grey color\" */}\n                    <AddIcon\n                      style={{ fontSize: \"6em\" }}\n                      color=\"disabled\"\n                    ></AddIcon>\n                  </Grid>\n                </CardActionArea>\n              </Card>\n            </Tooltip>\n          </Grid>\n        </Hidden>\n        <Hidden smUp>\n          <Grid container justify=\"flex-end\" style={{ height: \"100%\" }}>\n            <Fab\n              color=\"primary\"\n              aria-label=\"add\"\n              size=\"large\"\n              className={classes.fab}\n              component={Link}\n              to=\"/Create_Process\"\n            >\n              <AddIcon />\n            </Fab>\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n}\n\nexport default View_Process;\n"]},"metadata":{},"sourceType":"module"}