{"ast":null,"code":"var _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_Process_Instance.tsx\";\nimport * as React from \"react\";\nimport { get_process_instance } from \"../backend/ts/database\";\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport Timeline from \"../components/Process_timeline\";\nimport { Link } from \"react-router-dom\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\n//TODO: Change to functional component\nclass View_Process extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = void 0;\n    this.state = void 0;\n    this.props = props;\n    this.state = {};\n  }\n\n  componentDidMount() {\n    get_process_instance(this.props.match.params.process_instance_name, this.props.match.params.user_name).then(value => {\n      this.setState({\n        process: value\n      });\n    });\n  }\n\n  render() {\n    if (this.state.process !== undefined) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        component: Link,\n        to: \"/View_All_Process_Instances\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(ArrowBackIosIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), \" Go back\"), React.createElement(Timeline, {\n        process: this.state.process,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    } else return React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n}\n\nexport default View_Process;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_Process_Instance.tsx"],"names":["React","get_process_instance","Typography","IconButton","Timeline","Link","ArrowBackIosIcon","View_Process","Component","constructor","props","state","componentDidMount","match","params","process_instance_name","user_name","then","value","setState","process","render","undefined"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;AASA;AACA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAIzCC,EAAAA,WAAW,CAACC,KAAD,EAAkD;AAC3D,UAAMA,KAAN;AAD2D,SAH7DA,KAG6D;AAAA,SAF7DC,KAE6D;AAG3D,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBX,IAAAA,oBAAoB,CAClB,KAAKS,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,qBADN,EAElB,KAAKL,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBE,SAFN,CAApB,CAGEC,IAHF,CAGOC,KAAK,IAAI;AACd,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAd;AACD,KALD;AAMD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKV,KAAL,CAAWS,OAAX,KAAuBE,SAA3B,EAAsC;AACpC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAEjB,IADb;AAEE,QAAA,EAAE,EAAC,6BAFL;AAGE,QAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,aADF,EASE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKM,KAAL,CAAWS,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAaD,KAdD,MAcO,OAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACR;;AAnCwC;;AAsC3C,eAAeb,YAAf","sourcesContent":["import * as React from \"react\";\nimport { ProcessInstance } from \"../backend/ts/common_define\";\nimport { get_process_instance } from \"../backend/ts/database\";\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport Timeline from \"../components/Process_timeline\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\ninterface View_Process_State {\n  process?: ProcessInstance;\n}\ninterface View_Process_Params {\n  process_instance_name: string;\n  user_name: string;\n}\n//TODO: Change to functional component\nclass View_Process extends React.Component {\n  props: RouteComponentProps<View_Process_Params>;\n  state: View_Process_State;\n\n  constructor(props: RouteComponentProps<View_Process_Params>) {\n    super(props);\n\n    this.props = props;\n    this.state = {};\n  }\n  componentDidMount() {\n    get_process_instance(\n      this.props.match.params.process_instance_name,\n      this.props.match.params.user_name\n    ).then(value => {\n      this.setState({ process: value });\n    });\n  }\n\n  render() {\n    if (this.state.process !== undefined) {\n      return (\n        <div>\n          <IconButton\n            component={Link}\n            to=\"/View_All_Process_Instances\"\n            color=\"inherit\"\n          >\n            <ArrowBackIosIcon /> Go back\n          </IconButton>\n\n          <Timeline process={this.state.process} />\n        </div>\n      );\n    } else return <Typography>Loading...</Typography>;\n  }\n}\n\nexport default View_Process;\n"]},"metadata":{},"sourceType":"module"}