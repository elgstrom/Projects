{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/components/Delete_Process_Template_Modal.tsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { IconButton } from \"@material-ui/core\";\nexport default function Delete_Process_Template_Modal(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = answer => {\n    setOpen(false);\n    if (answer === true) props.onDelete(props.process);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"secondary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Are you sure you want to delete this?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      handleClose(false);\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"No\"), React.createElement(Button, {\n    onClick: () => {\n      handleClose(true);\n    },\n    color: \"primary\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Yes\"))));\n}","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/components/Delete_Process_Template_Modal.tsx"],"names":["React","Button","Dialog","DialogActions","DialogTitle","DeleteIcon","IconButton","Delete_Process_Template_Modal","props","useState","open","setOpen","handleClickOpen","handleClose","answer","onDelete","process"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAOA,eAAe,SAASC,6BAAT,CACbC,KADa,EAEb;AAAA,0BACwBR,KAAK,CAACS,QAAN,CAAe,KAAf,CADxB;AAAA;AAAA,QACOC,IADP;AAAA,QACaC,OADb;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAIC,MAAD,IAAqB;AACvCH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,QAAIG,MAAM,KAAK,IAAf,EAAqBN,KAAK,CAACO,QAAN,CAAeP,KAAK,CAACQ,OAArB;AACtB,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAEJ,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,OAAO,EAAEG,WAFX;AAGE,uBAAgB,oBAHlB;AAIE,wBAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,uCADH,CANF,EASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAHH;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EASE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHH;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,CATF,CAJF,CADF;AAoCD","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Process } from \"../backend/ts/common_define\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { IconButton } from \"@material-ui/core\";\n\ninterface Delete_Template_Modal_Props {\n  process: Process;\n  onDelete: Function;\n}\n\nexport default function Delete_Process_Template_Modal(\n  props: Delete_Template_Modal_Props\n) {\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (answer: Boolean) => {\n    setOpen(false);\n    if (answer === true) props.onDelete(props.process);\n  };\n\n  return (\n    <div>\n      <IconButton color=\"secondary\" onClick={handleClickOpen}>\n        <DeleteIcon />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure you want to delete this?\"}\n        </DialogTitle>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              handleClose(false);\n            }}\n            color=\"primary\"\n          >\n            No\n          </Button>\n          <Button\n            onClick={() => {\n              handleClose(true);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}