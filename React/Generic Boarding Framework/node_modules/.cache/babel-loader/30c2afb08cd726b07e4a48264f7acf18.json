{"ast":null,"code":"import _slicedToArray from \"/Users/elgstrom/Desktop/Netgain/netgain-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_All_Process_Instances.tsx\";\nimport React, { useState } from \"react\";\nimport { get_process_instances, delete_process_instance } from \"../backend/ts/database\";\nimport { Card, Grid, CardContent, Typography, createStyles, makeStyles, CardActions, IconButton } from \"@material-ui/core/\";\nimport with_on_hover_shadow from \"../components/Shadow_On_Hover\";\nimport { useHistory } from \"react-router-dom\"; //import DeleteButton from \"../components/Delete_Process_Template_Modal\";\n\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForward\";\nimport DeleteButton from \"../components/Delete_Item_Modal\"; //import ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst Card_HoverShadow = with_on_hover_shadow(Card, {\n  init: 1,\n  hovered: 3\n});\nconst useStyles = makeStyles(theme => createStyles({\n  fab: {\n    margin: theme.spacing(1)\n  },\n  card: {\n    \"&:hover\": {\n      boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n    }\n  }\n}));\n\nfunction View_Process() {\n  const _useState = useState({\n    processes: new Array()\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const history = useHistory();\n\n  const handleOpenClick = process => {\n    history.push(\"/View_Process_Instance/\".concat(process.user_name, \"/\").concat(process.title));\n  };\n\n  const handleDelete = process => {\n    setState({\n      processes: state.processes.filter(p => p !== process)\n    });\n    delete_process_instance(process);\n  };\n\n  React.useEffect(() => {\n    get_process_instances().then(value => {\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, state.processes && state.processes.length > 0 ? state.processes.map((process, index) => React.createElement(Grid, {\n    key: \"process.card.\".concat(index),\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, process.title), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, process.user_name), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\".concat(process.activities.filter(p => p.state >= 0).length, \" / \").concat(process.activities.length, \" completed\"))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(DeleteButton, {\n    item: process,\n    onDelete: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    onClick: () => {\n      handleOpenClick(process);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ArrowForwardIosIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))))))) : null));\n}\n\nexport default View_Process;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/View_All_Process_Instances.tsx"],"names":["React","useState","get_process_instances","delete_process_instance","Card","Grid","CardContent","Typography","createStyles","makeStyles","CardActions","IconButton","with_on_hover_shadow","useHistory","ArrowForwardIosIcon","DeleteButton","Card_HoverShadow","init","hovered","useStyles","theme","fab","margin","spacing","card","boxShadow","View_Process","processes","Array","state","setState","history","handleOpenClick","process","push","user_name","title","handleDelete","filter","p","useEffect","then","value","classes","length","map","index","activities"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Process, ProcessInstance } from \"../backend/ts/common_define\";\nimport {\n  get_process_instances,\n  delete_process_instance\n} from \"../backend/ts/database\";\nimport {\n  Card,\n  Grid,\n  CardContent,\n  Typography,\n  createStyles,\n  makeStyles,\n  Theme,\n  CardActions,\n  IconButton\n} from \"@material-ui/core/\";\nimport with_on_hover_shadow from \"../components/Shadow_On_Hover\";\nimport { useHistory } from \"react-router-dom\";\n//import DeleteButton from \"../components/Delete_Process_Template_Modal\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForward\";\nimport DeleteButton from \"../components/Delete_Item_Modal\";\n//import ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\n\ninterface View_Process_State {\n  processes: Array<Process>;\n}\nconst Card_HoverShadow = with_on_hover_shadow(Card, { init: 1, hovered: 3 });\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      margin: theme.spacing(1)\n    },\n    card: {\n      \"&:hover\": {\n        boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\"\n      }\n    }\n  })\n);\n\nfunction View_Process() {\n  const [state, setState] = useState({\n    processes: new Array<ProcessInstance>()\n  });\n\n  const history = useHistory();\n\n  const handleOpenClick = (process: ProcessInstance) => {\n    history.push(\n      `/View_Process_Instance/${process.user_name}/${process.title}`\n    );\n  };\n\n  const handleDelete = (process: ProcessInstance) => {\n    setState({\n      processes: state.processes.filter(p => p !== process)\n    });\n    delete_process_instance(process);\n  };\n\n  React.useEffect(() => {\n    get_process_instances().then(value => {\n      setState({\n        processes: value\n      });\n    });\n  }, []);\n  const classes = useStyles({});\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        {state.processes && state.processes.length > 0\n          ? state.processes.map((process, index) => (\n              <Grid\n                key={`process.card.${index}`}\n                item\n                xs={12}\n                sm={6}\n                md={4}\n                lg={3}\n              >\n                <Card className={classes.card}>\n                  <CardContent>\n                    <Typography variant=\"h5\">{process.title}</Typography>\n                    <Typography>{process.user_name}</Typography>\n                    <Typography>\n                      {`${process.activities.filter(p=> p.state >= 0).length} / ${process.activities.length} completed`}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Grid container justify=\"center\">\n                      <DeleteButton item={process} onDelete={handleDelete} />\n                      <IconButton\n                        onClick={() => {\n                          handleOpenClick(process);\n                        }}\n                      >\n                        <ArrowForwardIosIcon />\n                      </IconButton>\n                    </Grid>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))\n          : null}\n      </Grid>\n    </div>\n  );\n}\n\nexport default View_Process;\n"]},"metadata":{},"sourceType":"module"}