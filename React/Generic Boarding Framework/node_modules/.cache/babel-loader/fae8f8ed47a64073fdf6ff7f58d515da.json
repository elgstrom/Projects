{"ast":null,"code":"var _jsxFileName = \"/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/Create_Process_Form.tsx\";\nimport * as React from \"react\";\nimport { withFormik, Form, FieldArray } from \"formik\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { Activity } from \"../backend/ts/common_define\";\nimport { save_process_template } from \"../backend/ts/database\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  },\n  root: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(1)\n  }\n}));\n\nconst InnerForm = props => {\n  const values = props.values,\n        errors = props.errors,\n        touched = props.touched,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        isSubmitting = props.isSubmitting,\n        title = props.title;\n  const classes = useStyles({});\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"title\",\n    className: classes.textField,\n    label: \"Process Title\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    autoComplete: \"off\",\n    type: \"text\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.title,\n    inputProps: {\n      style: {\n        fontSize: 30\n      }\n    },\n    InputLabelProps: {\n      style: {\n        fontSize: 30\n      }\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(FieldArray, {\n    name: \"activities\",\n    render: helpers => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, values.activities && values.activities.length > 0 ? values.activities.map((activity, index) => React.createElement(Paper, {\n      className: classes.root,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoComplete: \"off\",\n      name: \"activities.\".concat(index, \".title\"),\n      className: classes.textField,\n      label: \"Activity Title\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: activity.title,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"activities.\".concat(index, \".description\"),\n      id: \"outlined-basic\",\n      className: classes.textField,\n      label: \"Description\",\n      margin: \"normal\",\n      multiline: true,\n      rows: \"3\",\n      variant: \"outlined\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: activity.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      justify: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.button,\n      \"aria-label\": \"add\",\n      color: \"default\",\n      onClick: () => helpers.push({\n        title: \"\",\n        description: \"\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      className: classes.button,\n      disabled: values.activities.length < 2,\n      \"aria-label\": \"add\",\n      color: \"default\",\n      onClick: () => helpers.remove(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(RemoveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))))) : null, React.createElement(Grid, {\n      justify: \"center\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.button,\n      type: \"submit\",\n      color: \"primary\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Save\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n};\n\nconst Create_Process_From = withFormik({\n  //TODO?\n  //here you could import a old process and map the values\n  mapPropsToValues: props => ({\n    title: \"\",\n    activities: [new Activity()]\n  }),\n\n  handleSubmit(p, {\n    props,\n    setSubmitting,\n    setErrors\n  }) {\n    save_process_template(p);\n  }\n\n})(InnerForm);\nexport default Create_Process_From;","map":{"version":3,"sources":["/Users/elgstrom/Desktop/Netgain/netgain-1/src/views/Create_Process_Form.tsx"],"names":["React","withFormik","Form","FieldArray","createStyles","makeStyles","TextField","Button","Paper","Grid","IconButton","AddIcon","RemoveIcon","Activity","save_process_template","useStyles","theme","container","display","flexWrap","button","margin","spacing","textField","width","root","padding","InnerForm","props","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","title","classes","style","fontSize","helpers","activities","length","map","activity","index","description","push","remove","Create_Process_From","mapPropsToValues","p","setSubmitting","setErrors"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { withFormik, FormikProps, Form, FieldArray } from \"formik\";\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { Process, Activity } from \"../backend/ts/common_define\";\nimport { save_process_template } from \"../backend/ts/database\";\n\ninterface OtherProps {\n\ttitle?: string;\n}\n\ninterface CreateProcessProps {\n\ttitle?: string;\n\tactivities?: Array<Activity>;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tcontainer: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexWrap: 'wrap',\n\t\t},\n\t\tbutton: {\n\t\t\tmargin: theme.spacing(1),\n\t\t},\n\t\ttextField: {\n\t\t\tmargin: theme.spacing(1),\n\t\t\twidth: \"100%\"\n\t\t},\n\t\troot: {\n\t\t\tpadding: theme.spacing(2),\n\t\t\tmargin: theme.spacing(1)\n\t\t},\n\t})\n);\n\nconst InnerForm = (props: OtherProps & FormikProps<Process>) => {\n\tconst {\n\t\tvalues,\n\t\terrors,\n\t\ttouched,\n\t\thandleChange,\n\t\thandleBlur,\n\t\thandleSubmit,\n\t\tisSubmitting,\n\t\ttitle\n\t} = props;\n\tconst classes = useStyles({});\n\treturn (\n\t\t<Form>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"center\"\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tname = \"title\"\n\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\tlabel=\"Process Title\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\tvalue={values.title}\n\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tstyle: { fontSize: 30 }\n\t\t\t\t\t}}\n\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\tstyle: { fontSize: 30 }\n\t\t\t\t\t}}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<FieldArray name=\"activities\"\n\t\t\t\trender={(helpers) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{values.activities && values.activities.length > 0 ? (\n\t\t\t\t\t\t\tvalues.activities.map((activity, index) => (\n\t\t\t\t\t\t\t\t<Paper className={classes.root} key={index}>\n\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t\t\tname={`activities.${index}.title`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Activity Title\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tvalue={activity.title}\n\t\t\t\t\t\t\t\t\t\t\trequired \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname={`activities.${index}.description`}\n\t\t\t\t\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tvalue={activity.description}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"add\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => helpers.push({ title: \"\", description: \"\" })}>\n\t\t\t\t\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={values.activities.length < 2}\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"add\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => helpers.remove(index)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<RemoveIcon />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\tisSubmitting\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</div>\n\t\t\t\t)} />\n\t\t</Form>\n\n\t);\n};\n\nconst Create_Process_From = withFormik<CreateProcessProps, Process>({\n\t//TODO?\n\t//here you could import a old process and map the values\n\tmapPropsToValues: props => ({\n\t\ttitle: \"\",\n\t\tactivities: [\n\t\t\tnew Activity(),\n\t\t],\n\n\t}),\n\n\thandleSubmit(\n\t\tp: Process,\n\t\t{ props, setSubmitting, setErrors }\n\t) {\n\t\tsave_process_template(p);\n\t}\n})(InnerForm);\n\nexport default Create_Process_From;\n\n"]},"metadata":{},"sourceType":"module"}